@model IndexModel

@using Core.Dtos.ContactInfoDtos

@{
    var searchModel = ViewData["SearchModel"] as ContactInfoGridDto;
}

@if (Model.ContactInfos == null || !Model.ContactInfos.Any())
{
    <div class="py-3 text-blue text-center no-record">
        <p>اطلاعاتی برای نمایش وجود ندارد.</p>
    </div>
}
else
{
    <table class="table table-striped AdvancedGrid">
        <thead>
            <tr>
                <th class="sortable">@Html.LabelFor(model => searchModel.Id)</th>
                <th>@Html.LabelFor(model => searchModel.ContactType)</th>
                <th>@Html.LabelFor(model => searchModel.Value)</th>
                <th class="sortable">@Html.LabelFor(model => searchModel.IsActive)</th>
                <th class="sortable">@Html.LabelFor(model => searchModel.CreatedOn)</th>
                <th class="sortable">@Html.LabelFor(model => searchModel.UpdatedOn)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ContactInfos)
            {
            <tr data-id="@item.Id">
                <td>@item.Id</td>
                <td>@MyHtmlHelper.GetDisplayName(item.ContactType)</td>
                @if (item.ContactType == ContactType.Location)
                {
                    <td>غیر قابل نمایش</td>
                }
                else
                {
                    <td>@item.Value</td>
                }
                <td>@Html.StatusBadge(item.Id.ToString(), item.IsActive)</td>
                <td>@item.CreatedOn</td>
                <td>@item.UpdatedOn</td>
                <td>
                    @Html.EditLink(Url.Page("Edit", new { item.Id }))
                    @Html.RemoveLink(item.Id.ToString())
                </td>
            </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="13" class="text-center">
                    @Html.Pagination(
                        Model.ContactInfos,
                        current => Url.Page("Index", new { current }),
                        PaginatedStyle.NumbersWithFirstPreviousNextLast,
                        new PaginatedOptions
                        {
                            NextLabel = "بعدی",
                            PreviousLabel = "قبلی",
                            FirstLabel = "اولین",
                            LastLabel = "آخرین"
                        }
                    )
                </td>
            </tr>
        </tfoot>
    </table>
}

